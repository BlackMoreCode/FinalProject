services:
  mysql:
    image: "mysql:latest"
    environment:
      - "MYSQL_DATABASE=final"
      - "MYSQL_PASSWORD=12341234"
      - "MYSQL_ROOT_PASSWORD=1234"
      - "MYSQL_USER=final"
    ports:
      - "3307:3306"  # 호스트의 3307 포트를 컨테이너의 3306 포트로 매핑
    volumes:
      - mysql-data:/var/lib/mysql  # 데이터 영속성을 위한 볼륨 추가
    networks:
      - app-network

  redis:
    image: "redis:latest"
    container_name: redis-container
    ports:
      - "6379:6379"  # 로컬 머신의 6379 포트를 컨테이너의 6379 포트에 매핑
    networks:
      - app-network

  flask:
    build:
      context: ../flask
    container_name: flask_app
    image: "homyeonggo/back-flask:latest"
    ports:
      - "5001:5000"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
    networks:
      - backend
    volumes:
      - ../flask:/app

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.12
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - backend

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge
  backend:
    driver: bridge