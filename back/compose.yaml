services:
  mysql:
    image: "mysql:latest"
    environment:
      - "MYSQL_DATABASE=final"
      - "MYSQL_PASSWORD=12341234"
      - "MYSQL_ROOT_PASSWORD=1234"
      - "MYSQL_USER=final"
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - mysql-network

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - redis-network
    mem_limit: 512m

  flask:
    build:
      context: ../flask
    container_name: flask_app
    ports:
      - "5001:5000"
    depends_on:
      - elasticsearch
      - redis
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - REDIS_URL=redis://redis:6379/0
    networks:
      - redis-network
      - backend
#    volumes:
#      - ../flask:/app

  rq-worker:
    build:
      context: ../flask  # Flask와 동일한 이미지 사용
    container_name: rq_worker
    depends_on:
      - redis
      - flask
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: rq worker --worker-class rq.SimpleWorker --max-idle-time 3000
    networks:
      - redis-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.12
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - "xpack.security.enabled=false"
      - "xpack.monitoring.enabled=false"
      - "xpack.ml.enabled=false"
      - "indices.fielddata.cache.size=50%"
      - "indices.query.bool.max_clause_count=1024"
      - "action.destructive_requires_name=true"
    ports:
      - "9200:9200"
    networks:
      - backend
    mem_limit: 3g
    ulimits:
      memlock:
        soft: -1
        hard: -1

volumes:
  mysql-data:

networks:
  redis-network:
    driver: bridge
  backend:
    driver: bridge
  mysql-network:
    driver: bridge
